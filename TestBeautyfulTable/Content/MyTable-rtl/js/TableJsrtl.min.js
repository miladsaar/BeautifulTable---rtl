var trVisibleList, countPages, btnSelect = "", btn = ""; function TableJs(t) { MakeTableList(t), LoadPager(t), SetFonts(t) } function HasHeader(t) { return null != $("#" + t).has("thead").html() } function MakeTableList(t) { var a = $("#" + t + " tr"); trVisibleList = new Array; var n = 3, e = 2; HasHeader(t) || (e = n = 0); for (var r = 0; r < a.length - n; r++)trVisibleList[r] = r + e } function FindCountPages(t) { var a = trVisibleList.length, n = parseInt($("#" + t + "countItemsInPage").val()); countPages = Math.ceil(a / n) } function FilterCol(t) { var a, n, e = $(t).val().toUpperCase(), r = "#" + $(t).parents("table").attr("id") + " tr", s = $(r), l = "#" + $(t).parents("table").attr("id") + " select[name ='search'] option:selected", o = $(l).index(); trVisibleList = new Array; var i = -1; for (n = 1; n < s.length; n++)(a = s[n].getElementsByTagName("td")[o]) && -1 < a.innerHTML.toUpperCase().indexOf(e) && (trVisibleList[++i] = n); $("#currentPage").val(1), LoadPager($(t).parents("table").attr("id")) } function GoPrevious(t) { var a = "#" + $(t).parents("table").attr("id") + "currentPage", n = $(a).val(); 1 < n && GoToPage(--n, t) } function GoNext(t) { var a = "#" + $(t).parents("table").attr("id") + "currentPage", n = parseInt($(a).val()); n < countPages && GoToPage(++n, t) } function GoToPage(t, a) { var n = "#" + $(a).parents("table").attr("id") + "currentPage", e = "#page" + $(n).val(); $(e).removeClass().addClass(btnSelect), $("#page" + t).removeClass().addClass(btn), $(n).val(t), t--; var r = "#" + $(a).parents("table").attr("id") + "countItemsInPage", s = t * parseInt($(r).val()), l = "#" + $(a).parents("table").attr("id") + "maxPageInline", o = parseInt($(l).val()), i = $(a).parents("table").attr("id"); o < countPages && LoadPager(i), ShowRowsTable(s, i) } function ShowRowsTable(t, a) { var n = HasHeader(a), e = "#" + a + " tr"; $(e).hide(); for (var r, s = parseInt(t), l = s + parseInt($("#" + a + "countItemsInPage").val()), o = s; o < l; o++)r = trVisibleList[o], $(e).eq(r).show(); $(e).eq(0).show(); var i = 1; n && ($(e).eq(1).show(), i = 0); var b = $("#" + a + "footerRow").val() - i; $(e).eq(b).show() } function ReloadPager(t) { var a = $(t).parents("table").attr("id"), n = parseInt($("#" + a + " input[name='rowsNumber']").val()), e = "#" + $(t).parents("table").attr("id") + "countItemsInPage"; $(e).val(n); var r = "#" + $(t).parents("table").attr("id") + "currentPage"; $(r).val("1"), LoadPager(a) } function LoadPager(t) { var a = 0, n = "", e = parseInt($("#" + t + "currentPage").val()); FindCountPages(t); var r = e - 1, s = countPages, l = parseInt($("#" + t + "maxPageInline").val()), o = "#" + t + " div[name='pages']"; l <= countPages && (l < countPages - e + 1 ? (s = r + l, a = e - 1) : a = (s = countPages) - l), $(o).empty(), 1 < countPages && $(o).append("<a class='btn btn-warning prvButton' href='#'onclick='GoPrevious(this)'><span> قبلی</span></a>"); for (var i = a; i < s; i++) { var b = i + 1; n = "<a class='btn " + SetBtn(e, i, t) + "' href='#'onclick='GoToPage(" + b + ",this)'Id='" + t + "page" + b + "'>" + b + "</a>", $(o).append(n) } $("#page1").removeClass().addClass(btnSelect), 1 < countPages && $(o).append("<a class='btn btn-warning nextButton' href='#' onclick='GoNext(this)'><span>بعدی</span></a>"), ShowRowsTable(0, t) } function SetBtn(t, a, n) { var e = "", r = "#" + n, s = "#" + n + " input[name='btnDone']"; return $(r).hasClass("orange-table") ? (e = t - 1 == a ? "btn-danger" : "btn-outline-danger", btnSelect = "btn btn-danger", btn = "btn-outline-danger", $(s).removeClass().addClass("input btn btn-lg btn-outline-danger")) : $(r).hasClass("blue-table") ? (e = t - 1 == a ? "btn-primary" : "btn-outline-primary", btnSelect = "btn btn-primary", btn = "btn-outline-primary", $(s).removeClass().addClass("input btn btn-lg btn-outline-primary")) : $(r).hasClass("dark-table") ? (e = t - 1 == a ? "btn-dark" : "btn-outline-dark", btnSelect = "btn btn-dark", btn = "btn-outline-dark", $(s).removeClass().addClass("input btn btn-lg btn-outline-dark")) : $(r).hasClass("black-table") ? (e = t - 1 == a ? "btn-warning" : "btn-outline-warning", btnSelect = "btn btn-warning", btn = "btn-outline-warning", $(s).removeClass().addClass("input btn btn-lg btn-outline-dark")) : $(r).hasClass("white-table") ? (e = t - 1 == a ? "btn-dark" : "btn-outline-dark", btnSelect = "btn btn-dark", btn = "btn-outline-dark", $(s).removeClass().addClass("input btn btn-lg btn-outline-dark")) : $(r).hasClass("none-table") && (e = t - 1 == a ? "btn-light" : "btn-outline-light", btnSelect = "btn btn-light", btn = "btn-outline-light", $(s).removeClass().addClass("input btn btn-lg btn-outline-light")), e } function SetFonts(t) { var a = "#" + t + " thead", n = "#" + t + " tfoot", e = "#" + t + " tbody tr td", r = $("#" + t + "fontColor").val(); if (0 < r.length) { var s = r.split(","); $(a).css("color", s[0]), $(e).css("color", s[1]), $(n).css("color", s[2]) } } $(window).load(function () { $("#lodingOverlay").hide() });